# -- Paths
# The values in here expand "~/" to the home directory.

# Path to the story download directory. If it doesn't already exist, it will be created.
# Can be set from environment with: FFT_DOWNLOAD_DIR
download_dir = "~/Downloads"

# Path of the tracker file. If it doesn't already exist, it will be created.
# Can be set from environment with: FFT_TRACKER_FILE
tracker_file = "~/.local/share/fimfic-tracker/track-data.json"

# -- Download
# The format in which to download the stories. The valid values are:
# + "txt"
# + "html"
# + "epub"
# Can be set from environment with: FFT_DOWNLOAD_FORMAT
download_format = "html"

# The seconds to wait between each download.
# Can be set from environment with: FFT_DOWNLOAD_DELAY
download_delay = 5

# -- Sensibility
# The parameters to consider for the conclusion that a story has a relevant update
# or not. The application compares the cached story data to the current one for an
# update like so:
#   1. Checks if the amount of chapters is different.
#   2. Checks if the amount of words is different.
#   3. Checks if the modification date is more recent.
#
# Since (2) and (3) can be a little noisy, this option allows to skip
# download on those cases if so you want it to.
#
# The valid values are:
# + 0: Ignores (2) and (3), only on chapters.
# + 1: Ignores (3), only on chapters and words.
# + 2: Ignores nothing, complete check.
#
# Can be set from environment with: FFT_SENSIBILITY_LEVEL
sensibility_level = 0

# -- Alt Download
# If not empty, this will be executed as a command in the download process
# instead of directly downloading from Fimfiction. Said command is only considered
# successful if its return code is 0 and it was not interrupted.
#
# The argument splitting will:
#  - Interpret any backslash (\) as an escape character, so if you need a literal
#  "\" you should type "\\".
#  - Consider a properly quoted section, be it with double quotes (") or single
#  quotes ('), as a single argument, like a shell would do.
#
# While it may act like one it is NOT a shell nor is it run in one. It WON'T
# expand tilde (~) into the home directory and it will ONLY expand the variables
# listed below.
#
# The format for said variables is the same as the one used inside a unix shell,
# meaning that $VAR and ${VAR} should work as expected (${VAR-:DEFAULT} does indeed work,
# but isn't really useful).
# To use a literal $ you should type $$.
#
# Available story variables:
# - ID: The ID of the story.
# - TITLE: The title of the story, safe to use as a filename.
# - AUTHOR: The author name of the story, safe to use as a filename.
# - CHAPTERS: The amount of chapters the story has.
# - WORDS: The amount of words the story has.
# - UPDATE_TIMESTAMP: The timestamp of the update date.
# - URL: Story URL, the same as typing "https://www.fimfiction.net/story/$ID".
# - DOWNLOAD_URL: Story download url, the same as typing
#   "https://www.fimfiction.net/story/download/$ID/$FORMAT"
#
# Available configuration variables:
# - DOWNLOAD_DIR: The expanded path of the download directory.
# - FORMAT: The value of download_format.
#
# Can be set from environment with: FFT_EXEC
exec = ''

# Alternative download method.
# exec = 'wget -O "$DOWNLOAD_DIR/$TITLE.$FORMAT" "$DOWNLOAD_URL"'
#
# fimfic2epub
# exec = 'fimfic2epub --dir "$DOWNLOAD_DIR" $ID'
#
# FanFicFare
# If you would like progress indication you can add the "--progressbar" flag.
# For a more verbose output add the "--debug" flag.
# exec = 'fanficfare --format=$FORMAT --non-interactive --option output_filename="$DOWNLOAD_DIR/$${title}-$${siteabbrev}_$${storyId}$${formatext}" "$URL"'
#
# If you REALLY need shell features you can use the shell command "/usr/bin/sh".
# Keeping in mind that variables will be tried to be expanded by the ones listed above FIRST
# and then by the shell.
# For instance, these examples accomplish the same thing.
# exec = "/usr/bin/sh -c 'wget -O \"$HOME/Downloads/$TITLE.$FORMAT\" \"$DOWNLOAD_URL\"'"
# exec = "/usr/bin/sh -c 'wget -O \"$$HOME/Downloads/$TITLE.$FORMAT\" \"$DOWNLOAD_URL\"'"
# exec = "/usr/bin/sh -c 'wget -O \"$(xdg-user-dir DOWNLOAD)/$TITLE.$FORMAT\" \"$DOWNLOAD_URL\"'"

# Whether or not to suppress the output of the command defined in download_alt.
# Can be set from environment with: FFT_QUIET
quiet = false
